{"ast":null,"code":"var _jsxFileName = \"/mnt/c/xampp2/htdocs/memory/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst HIDDEN_SYMBOL = \"_\";\n\nconst Lettre = ({\n  lettre,\n  feedback\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: `lettre ${feedback}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"lettre\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, feedback === 'hidden' ? HIDDEN_SYMBOL : lettre));\n\nconst Entree = ({\n  lettre,\n  feedback,\n  onClick\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: `entree ${feedback}`,\n  onClick: () => onClick(lettre),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"symbol\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, lettre));\n\nfunction getAllIndexes(arr, val) {\n  let indexes = [],\n      i;\n\n  for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n\n  return indexes;\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = entree => {\n      if (this.state.mot.indexOf(entree) !== -1) {\n        let indexes = getAllIndexes(this.state.mot, entree); //console.log(indexes);\n\n        let lettre = [...this.state.lettre];\n        let matchedIndices = [...this.state.matchedIndices];\n        indexes.map(function (index) {\n          matchedIndices[index] = { ...matchedIndices[index],\n            ...lettre[index].name\n          };\n          lettre[index] = { ...lettre[index],\n            feedback: \"visible\"\n          };\n          return 1;\n        });\n        this.setState({\n          lettre\n        });\n        this.setState({\n          matchedIndices\n        });\n        console.log(matchedIndices);\n        if (arrayEquals(this.state.mot, matchedIndices)) alert(\"Vous avez gagnez\"); //this.setState({lettre.feedback: \"visible\"})\n\n        /*\n          this.setState(\n            (prevState, props) => ({ })\n          )\n        */\n      }\n    };\n\n    this.state = {\n      matchedIndices: [],\n      mot: [\"S\", \"E\", \"R\", \"P\", \"E\", \"N\", \"T\"],\n      lettre: [{\n        id: 1,\n        name: \"S\",\n        feedback: \"hidden\"\n      }, {\n        id: 2,\n        name: \"E\",\n        feedback: \"hidden\"\n      }, {\n        id: 3,\n        name: \"R\",\n        feedback: \"hidden\"\n      }, {\n        id: 4,\n        name: \"P\",\n        feedback: \"hidden\"\n      }, {\n        id: 5,\n        name: \"E\",\n        feedback: \"hidden\"\n      }, {\n        id: 6,\n        name: \"N\",\n        feedback: \"hidden\"\n      }, {\n        id: 7,\n        name: \"T\",\n        feedback: \"hidden\"\n      }],\n      entree: [{\n        id: 1,\n        name: \"A\"\n      }, {\n        id: 2,\n        name: \"B\"\n      }, {\n        id: 3,\n        name: \"C\"\n      }, {\n        id: 4,\n        name: \"D\"\n      }, {\n        id: 5,\n        name: \"E\"\n      }, {\n        id: 6,\n        name: \"F\"\n      }, {\n        id: 7,\n        name: \"G\"\n      }, {\n        id: 8,\n        name: \"H\"\n      }, {\n        id: 9,\n        name: \"I\"\n      }, {\n        id: 10,\n        name: \"J\"\n      }, {\n        id: 11,\n        name: \"K\"\n      }, {\n        id: 12,\n        name: \"L\"\n      }, {\n        id: 13,\n        name: \"M\"\n      }, {\n        id: 14,\n        name: \"N\"\n      }, {\n        id: 15,\n        name: \"O\"\n      }, {\n        id: 16,\n        name: \"P\"\n      }, {\n        id: 17,\n        name: \"Q\"\n      }, {\n        id: 18,\n        name: \"R\"\n      }, {\n        id: 19,\n        name: \"S\"\n      }, {\n        id: 20,\n        name: \"T\"\n      }, {\n        id: 21,\n        name: \"U\"\n      }, {\n        id: 22,\n        name: \"V\"\n      }, {\n        id: 23,\n        name: \"W\"\n      }, {\n        id: 24,\n        name: \"X\"\n      }, {\n        id: 25,\n        name: \"Y\"\n      }, {\n        id: 26,\n        name: \"Z\"\n      }]\n    };\n  }\n\n  render() {\n    const {\n      lettre,\n      entree\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, lettre.map((lettre, index) => /*#__PURE__*/React.createElement(Lettre, {\n      lettre: lettre.name,\n      feedback: lettre.feedback,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    })), entree.map((entree, index) => /*#__PURE__*/React.createElement(Entree, {\n      lettre: entree.name,\n      feedback: \"visible\",\n      onClick: this.handleClick,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n    {this.lettre.map((lettre, index) => (\n      <Lettre lettre={lettre.name} feedback=\"hidden\" index={index} />\n    \n    ))}\n    </div>\n  );\n}\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/xampp2/htdocs/memory/src/App.js"],"names":["React","Component","HIDDEN_SYMBOL","Lettre","lettre","feedback","Entree","onClick","getAllIndexes","arr","val","indexes","i","length","push","App","handleClick","entree","state","mot","indexOf","matchedIndices","map","index","name","setState","console","log","arrayEquals","alert","id","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nconst HIDDEN_SYMBOL = \"_\";\nconst Lettre = ({ lettre, feedback }) => (\n  <div className={`lettre ${feedback}`}>\n    <span className=\"lettre\">\n      {feedback === 'hidden' ? HIDDEN_SYMBOL : lettre}\n    </span>\n  </div>\n)\nconst Entree = ({ lettre, feedback, onClick }) => (\n  <div className={`entree ${feedback}`} onClick={() => onClick(lettre)}>\n    <span className=\"symbol\">\n      {lettre}\n    </span>\n  </div>\n)\nfunction getAllIndexes (arr, val){\n      let indexes = [], i;\n      for(i = 0; i < arr.length; i++)\n          if (arr[i] === val)\n              indexes.push(i);\n      return indexes;\n  }\nclass App extends Component {\n  \n  handleClick = (entree) => {\n    \n    if(this.state.mot.indexOf(entree) !== -1){\n      let indexes = getAllIndexes(this.state.mot, entree);\n      //console.log(indexes);\n      let lettre = [ ...this.state.lettre ]\n      let matchedIndices = [ ...this.state.matchedIndices ]\n      \n      indexes.map(function(index) {\n        matchedIndices[index] = {...matchedIndices[index], ...lettre[index].name}\n        lettre[index] = {...lettre[index], feedback: \"visible\"}\n        return 1;\n      })\n      \n      \n      this.setState({ lettre })\n      this.setState({ matchedIndices })\n      console.log(matchedIndices)\n      if(arrayEquals(this.state.mot,matchedIndices))\n      alert(\"Vous avez gagnez\")\n      //this.setState({lettre.feedback: \"visible\"})\n      /*\n        this.setState(\n          (prevState, props) => ({ })\n        )\n      */\n    }\n    \n  }\n  state = {\n    matchedIndices : [],\n    mot :[\"S\", \"E\", \"R\", \"P\", \"E\", \"N\", \"T\"],\n    \n   lettre :[\n    {id:1, name:\"S\", feedback: \"hidden\"},\n    {id:2, name:\"E\", feedback: \"hidden\"},\n    {id:3, name:\"R\", feedback: \"hidden\"},\n    {id:4, name:\"P\", feedback: \"hidden\"},\n    {id:5, name:\"E\", feedback: \"hidden\"},\n    {id:6, name:\"N\", feedback: \"hidden\"},\n    {id:7, name:\"T\", feedback: \"hidden\"}\n  ],\n   entree : [\n    {id:1, name:\"A\"},\n    {id:2, name:\"B\"},\n    {id:3, name:\"C\"},\n    {id:4, name:\"D\"},\n    {id:5, name:\"E\"},\n    {id:6, name:\"F\"},\n    {id:7, name:\"G\"},\n    {id:8, name:\"H\"},\n    {id:9, name:\"I\"},\n    {id:10, name:\"J\"},\n    {id:11, name:\"K\"},\n    {id:12, name:\"L\"},\n    {id:13, name:\"M\"},\n    {id:14, name:\"N\"},\n    {id:15, name:\"O\"},\n    {id:16, name:\"P\"},\n    {id:17, name:\"Q\"},\n    {id:18, name:\"R\"},\n    {id:19, name:\"S\"},\n    {id:20, name:\"T\"},\n    {id:21, name:\"U\"},\n    {id:22, name:\"V\"},\n    {id:23, name:\"W\"},\n    {id:24, name:\"X\"},\n    {id:25, name:\"Y\"},\n    {id:26, name:\"Z\"},\n   ]\n   }\n render () {\n\n   const { lettre, entree} = this.state\n   \n    return (\n      <div className=\"App\">\n      {lettre.map((lettre, index) => (\n            <Lettre lettre={lettre.name} feedback={lettre.feedback} key={index} />\n       ))}\n      {entree.map((entree, index) => (\n        \n            <Entree lettre={entree.name} feedback=\"visible\" onClick={this.handleClick} key={index}   />\n       ))}\n       \n      </div>\n    )\n  }\n\n}\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n    {this.lettre.map((lettre, index) => (\n      <Lettre lettre={lettre.name} feedback=\"hidden\" index={index} />\n    \n    ))}\n    </div>\n  );\n}\n*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}