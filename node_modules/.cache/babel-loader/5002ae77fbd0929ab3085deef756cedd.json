{"ast":null,"code":"var _jsxFileName = \"/mnt/c/xampp2/htdocs/memory/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst HIDDEN_SYMBOL = \"_\";\n\nconst Lettre = ({\n  lettre,\n  feedback\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: `lettre ${feedback}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"lettre\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, feedback === 'hidden' ? HIDDEN_SYMBOL : lettre));\n\nconst FormJoueur = ({\n  nomJoueur,\n  onSubmit\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  id: \"divForm\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"form\", {\n  id: \"form\",\n  onSubmit: event => onSubmit(event),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, \"Joueur 1 :\", /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  id: \"joueur1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }\n}, \"Joueur 2 :\", /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  id: \"joueur2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"submit\",\n  value: \"Commencer\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n})));\n\nconst Score = ({\n  score,\n  nomJoueur\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: `score`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, \"Score de \", nomJoueur[0], \" : \", score[0], /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }\n}), \"Score de \", nomJoueur[1], \" : \", score[1], /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }\n})));\n\nconst Reinit = ({\n  nomJoueur,\n  joueurCourant,\n  onClick,\n  onClickReboot,\n  nomVainqueur\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"reinitParent\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  className: `win`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }\n}, nomVainqueur, \" a gagn\\xE9!\"), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"button\", {\n  className: `reinit`,\n  onClick: () => onClick(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}, \"Recommencer\"), /*#__PURE__*/React.createElement(\"button\", {\n  className: `reboot`,\n  onClick: () => onClickReboot(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }\n}, \"Changer de joueur\"));\n\nconst Entree = ({\n  lettre,\n  feedback,\n  range,\n  onClick\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: `entree ${feedback} ${range}`,\n  onClick: () => onClick(lettre),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"symbol\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }\n}, lettre));\n\nfunction getAllIndexes(arr, val) {\n  let indexes = [],\n      i;\n\n  for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n\n  return indexes;\n}\n\nlet count = 0;\nlet copy = [];\nconst LISTE_MOT = [\"SERPENT\", \"TORTUE\", \"CHEVAL\", \"CROCODILE\", \"LION\", \"ELEPHANT\", \"CHEVRE\", \"MOUTON\", \"CRAPAUD\"];\nlet min = 0;\nlet max = LISTE_MOT.length;\nlet random = parseInt(min + Math.random() * (max - min), 10);\nlet MOT = LISTE_MOT[random];\nconst ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; //On transforme le string mot en array\n\nconst getMot = mot => {\n  return mot.split('');\n}; //On transforme le string mot en lettre ({id:..., name:..., feedback:...})\n\n\nconst getLettre = mot => {\n  let lettre = getMot(mot);\n  lettre = lettre.map(function (value, index) {\n    value = {\n      id: index + 1,\n      name: value,\n      feedback: \"hidden\"\n    };\n    return value;\n  });\n  return lettre;\n}; //On transforme le string mot en entree ({id:..., name:..., feedback:...})\n\n\nconst getEntree = alphabet => {\n  let entree = getMot(alphabet);\n  entree = entree.map(function (value, index) {\n    value = {\n      id: index + 1,\n      name: value,\n      feedback: \"clickable\"\n    };\n    return value;\n  });\n  return entree;\n}; //fonction qui permet d'initialiser le state\n\n\nconst getInitialiser = (obj, detail) => {\n  if (detail === \"constructor\") obj.state = {\n    won: false,\n    start: false,\n    nomJoueur: [],\n    joueurCourant: 0,\n    nomVainqueur: \"\",\n    score: [0, 0],\n    matchedIndices: [],\n    mot: getMot(MOT),\n    lettre: getLettre(MOT),\n    entree: getEntree(ALPHABET)\n  };else if (detail === \"reboot\") obj.setState({\n    won: false,\n    start: false,\n    nomJoueur: [],\n    joueurCourant: 0,\n    score: [0, 0],\n    matchedIndices: [],\n    mot: getMot(MOT),\n    lettre: getLettre(MOT),\n    entree: getEntree(ALPHABET)\n  });else obj.setState({\n    won: false,\n    start: true,\n    joueurCourant: 0,\n    score: [0, 0],\n    matchedIndices: [],\n    mot: getMot(MOT),\n    lettre: getLettre(MOT),\n    entree: getEntree(ALPHABET)\n  });\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleReboot = document => {\n      getInitialiser(this, \"reboot\");\n    };\n\n    this.handleReinit = () => {\n      let oldRandom = random;\n\n      do {\n        random = parseInt(min + Math.random() * (max - min), 10);\n      } while (oldRandom === random);\n\n      MOT = LISTE_MOT[random];\n      getInitialiser(this, \"function\");\n    };\n\n    this.handleKeyDown = event => {\n      if (!this.state.won && event.keyCode > 64 && event.keyCode < 91) {\n        let valeurLettre = this.state.entree[event.keyCode - 65].name;\n        this.handleClick(valeurLettre);\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let start = this.state.start;\n      let nomJoueur = [...this.state.nomJoueur];\n      nomJoueur[0] = document.getElementById(\"joueur1\").value;\n      nomJoueur[1] = document.getElementById(\"joueur2\").value;\n      start = true;\n      this.setState({\n        start\n      });\n      this.setState({\n        nomJoueur\n      });\n      document.addEventListener(\"keydown\", this.handleKeyDown);\n    };\n\n    this.handleClick = boutonClique => {\n      let entree = [...this.state.entree];\n      let joueurCourant = this.state.joueurCourant;\n      let score = this.state.score;\n      let nomJoueur = this.state.nomJoueur;\n      let compteur = 0;\n      entree.map(function (index) {\n        if (index.name === boutonClique) {\n          entree[compteur] = { ...entree[compteur],\n            feedback: \"alreadyClicked\"\n          };\n        }\n\n        compteur++;\n        return 1;\n      });\n      this.setState({\n        entree\n      });\n\n      if (this.state.mot.indexOf(boutonClique) !== -1 && this.state.won === false) {\n        let indexes = getAllIndexes(this.state.mot, boutonClique);\n        let lettre = [...this.state.lettre];\n        let matchedIndices = [...this.state.matchedIndices];\n        let dejaClique = false;\n        indexes.map(function (index) {\n          if (matchedIndices[index] && matchedIndices[index][0] === boutonClique) dejaClique = true;\n          matchedIndices[index] = { ...matchedIndices[index],\n            ...lettre[index].name\n          };\n          lettre[index] = { ...lettre[index],\n            feedback: \"visible\"\n          };\n          return 1;\n        });\n\n        if (dejaClique) {\n          score[joueurCourant] = score[joueurCourant] - 2;\n          if (joueurCourant === 0) joueurCourant = 1;else joueurCourant = 0;\n        } else score[joueurCourant] = score[joueurCourant] + 2;\n\n        this.setState({\n          score\n        });\n        this.setState({\n          lettre\n        });\n        this.setState({\n          matchedIndices\n        });\n        copy = this.state.mot;\n        count = 0;\n        matchedIndices.map(function (value, key) {\n          if (value !== undefined && copy[key] === value[0]) {\n            count = count + 1;\n          }\n\n          return 1;\n        });\n\n        if (count === this.state.mot.length) {\n          let joueurAdverse = joueurCourant === 1 ? 0 : 1;\n          console.log(joueurAdverse);\n          console.log(joueurCourant);\n          if (score[joueurCourant] > score[joueurAdverse]) this.setState({\n            nomVainqueur: nomJoueur[joueurCourant]\n          });else this.setState({\n            nomVainqueur: nomJoueur[joueurAdverse]\n          });\n          this.setState({\n            won: true\n          });\n        }\n      } else {\n        score[joueurCourant] = score[joueurCourant] - 1;\n        if (joueurCourant === 0) joueurCourant = 1;else joueurCourant = 0;\n        this.setState({\n          score\n        });\n      }\n\n      this.setState({\n        joueurCourant\n      });\n    };\n\n    getInitialiser(this, \"constructor\");\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  render() {\n    const {\n      lettre,\n      entree,\n      won,\n      score,\n      start,\n      nomJoueur,\n      joueurCourant,\n      nomVainqueur\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }\n    }, !start && /*#__PURE__*/React.createElement(FormJoueur, {\n      nomJoueur: nomJoueur,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 18\n      }\n    }), start && lettre.map((lettre, index) => /*#__PURE__*/React.createElement(Lettre, {\n      lettre: lettre.name,\n      feedback: lettre.feedback,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    })), start && !won && entree.map((entree, index) => /*#__PURE__*/React.createElement(Entree, {\n      lettre: entree.name,\n      feedback: entree.feedback,\n      range: index < 13 ? 'firstRange' : 'secondRange',\n      onClick: this.handleClick,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    })), start && /*#__PURE__*/React.createElement(Score, {\n      nomJoueur: nomJoueur,\n      score: score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }), start && won && /*#__PURE__*/React.createElement(Reinit, {\n      nomJoueur: nomJoueur,\n      joueurCourant: joueurCourant,\n      nomVainqueur: nomVainqueur,\n      onClick: this.handleReinit,\n      onClickReboot: this.handleReboot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 24\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/xampp2/htdocs/memory/src/App.js"],"names":["React","Component","HIDDEN_SYMBOL","Lettre","lettre","feedback","FormJoueur","nomJoueur","onSubmit","event","Score","score","Reinit","joueurCourant","onClick","onClickReboot","nomVainqueur","Entree","range","getAllIndexes","arr","val","indexes","i","length","push","count","copy","LISTE_MOT","min","max","random","parseInt","Math","MOT","ALPHABET","getMot","mot","split","getLettre","map","value","index","id","name","getEntree","alphabet","entree","getInitialiser","obj","detail","state","won","start","matchedIndices","setState","App","constructor","props","handleReboot","document","handleReinit","oldRandom","handleKeyDown","keyCode","valeurLettre","handleClick","handleSubmit","preventDefault","getElementById","addEventListener","boutonClique","compteur","indexOf","dejaClique","key","undefined","joueurAdverse","console","log","componentWillUnmount","removeEventListener","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,MAAMC,aAAa,GAAG,GAAtB;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,kBACb;AAAK,EAAA,SAAS,EAAG,UAASA,QAAS,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,QAAQ,KAAK,QAAb,GAAwBH,aAAxB,GAAwCE,MAD3C,CADF,CADF;;AAOA,MAAME,UAAU,GAAE,CAAC;AAAGC,EAAAA,SAAH;AAAcC,EAAAA;AAAd,CAAD,kBAChB;AAAK,EAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAM,EAAA,EAAE,EAAC,MAAT;AAAiB,EAAA,QAAQ,EAAGC,KAAD,IAAWD,QAAQ,CAACC,KAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAmB,EAAA,EAAE,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAmB,EAAA,EAAE,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CALF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAVF,eAWE;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,KAAK,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAXF,CADF,CADF;;AAiBA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASJ,EAAAA;AAAT,CAAD,kBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAM,EAAA,SAAS,EAAG,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACYA,SAAS,CAAC,CAAD,CADrB,SAC6BI,KAAK,CAAC,CAAD,CADlC,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAGYJ,SAAS,CAAC,CAAD,CAHrB,SAG6BI,KAAK,CAAC,CAAD,CAHlC,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,CADF,CADF;;AAUA,MAAMC,MAAM,GAAG,CAAC;AAAEL,EAAAA,SAAF;AAAaM,EAAAA,aAAb;AAA4BC,EAAAA,OAA5B;AAAqCC,EAAAA,aAArC;AAAoDC,EAAAA;AAApD,CAAD,kBACb;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAGE;AAAK,EAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwBA,YAAxB,iBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,eAME;AAAQ,EAAA,SAAS,EAAG,QAApB;AAA6B,EAAA,OAAO,EAAE,MAAMF,OAAO,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,eASE;AAAQ,EAAA,SAAS,EAAG,QAApB;AAA6B,EAAA,OAAO,EAAE,MAAMC,aAAa,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATF,CADF;;AAeA,MAAME,MAAM,GAAG,CAAC;AAAEb,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBa,EAAAA,KAApB;AAA2BJ,EAAAA;AAA3B,CAAD,kBACb;AAAK,EAAA,SAAS,EAAG,UAAST,QAAS,IAAGa,KAAM,EAA5C;AAA+C,EAAA,OAAO,EAAE,MAAMJ,OAAO,CAACV,MAAD,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,MADH,CADF,CADF;;AAOA,SAASe,aAAT,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAiC;AAC7B,MAAIC,OAAO,GAAG,EAAd;AAAA,MAAkBC,CAAlB;;AACA,OAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGH,GAAG,CAACI,MAAnB,EAA2BD,CAAC,EAA5B,EACI,IAAIH,GAAG,CAACG,CAAD,CAAH,KAAWF,GAAf,EACIC,OAAO,CAACG,IAAR,CAAaF,CAAb;;AACR,SAAOD,OAAP;AACH;;AACD,IAAII,KAAK,GAAG,CAAZ;AACA,IAAIC,IAAI,GAAG,EAAX;AACA,MAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,MAA7C,EAAqD,UAArD,EAAiE,QAAjE,EAA2E,QAA3E,EAAqF,SAArF,CAAlB;AACA,IAAIC,GAAG,GAAG,CAAV;AACA,IAAIC,GAAG,GAAGF,SAAS,CAACJ,MAApB;AACA,IAAIO,MAAM,GAAGC,QAAQ,CAACH,GAAG,GAAGI,IAAI,CAACF,MAAL,MAAiBD,GAAG,GAAGD,GAAvB,CAAP,EAAoC,EAApC,CAArB;AACA,IAAIK,GAAG,GAAGN,SAAS,CAACG,MAAD,CAAnB;AACA,MAAMI,QAAQ,GAAG,4BAAjB,C,CACA;;AACA,MAAMC,MAAM,GAAIC,GAAD,IAAQ;AACrB,SAAOA,GAAG,CAACC,KAAJ,CAAU,EAAV,CAAP;AACD,CAFD,C,CAGA;;;AACA,MAAMC,SAAS,GAAIF,GAAD,IAAQ;AACxB,MAAIjC,MAAM,GAAGgC,MAAM,CAACC,GAAD,CAAnB;AACAjC,EAAAA,MAAM,GAAGA,MAAM,CAACoC,GAAP,CAAW,UAASC,KAAT,EAAgBC,KAAhB,EAAsB;AACxCD,IAAAA,KAAK,GAAG;AAACE,MAAAA,EAAE,EAAED,KAAK,GAAC,CAAX;AAAcE,MAAAA,IAAI,EAAEH,KAApB;AAA2BpC,MAAAA,QAAQ,EAAE;AAArC,KAAR;AACA,WAAOoC,KAAP;AACD,GAHQ,CAAT;AAIA,SAAOrC,MAAP;AACD,CAPD,C,CAQA;;;AACA,MAAMyC,SAAS,GAAIC,QAAD,IAAa;AAC7B,MAAIC,MAAM,GAAGX,MAAM,CAACU,QAAD,CAAnB;AACAC,EAAAA,MAAM,GAAGA,MAAM,CAACP,GAAP,CAAW,UAASC,KAAT,EAAgBC,KAAhB,EAAsB;AACxCD,IAAAA,KAAK,GAAG;AAACE,MAAAA,EAAE,EAAED,KAAK,GAAC,CAAX;AAAcE,MAAAA,IAAI,EAAEH,KAApB;AAA2BpC,MAAAA,QAAQ,EAAE;AAArC,KAAR;AACA,WAAOoC,KAAP;AACD,GAHQ,CAAT;AAIA,SAAOM,MAAP;AACD,CAPD,C,CAQA;;;AACA,MAAMC,cAAc,GAAI,CAACC,GAAD,EAAMC,MAAN,KAAkB;AAExC,MAAGA,MAAM,KAAM,aAAf,EACED,GAAG,CAACE,KAAJ,GAAY;AACVC,IAAAA,GAAG,EAAG,KADI;AAEVC,IAAAA,KAAK,EAAG,KAFE;AAGV9C,IAAAA,SAAS,EAAE,EAHD;AAIVM,IAAAA,aAAa,EAAG,CAJN;AAKVG,IAAAA,YAAY,EAAE,EALJ;AAMVL,IAAAA,KAAK,EAAG,CAAC,CAAD,EAAG,CAAH,CANE;AAOV2C,IAAAA,cAAc,EAAG,EAPP;AAQVjB,IAAAA,GAAG,EAAED,MAAM,CAACF,GAAD,CARD;AASV9B,IAAAA,MAAM,EAAEmC,SAAS,CAACL,GAAD,CATP;AAUVa,IAAAA,MAAM,EAAGF,SAAS,CAACV,QAAD;AAVR,GAAZ,CADF,KAaK,IAAGe,MAAM,KAAM,QAAf,EACHD,GAAG,CAACM,QAAJ,CAAc;AACZH,IAAAA,GAAG,EAAG,KADM;AAEZC,IAAAA,KAAK,EAAG,KAFI;AAGZ9C,IAAAA,SAAS,EAAE,EAHC;AAIZM,IAAAA,aAAa,EAAG,CAJJ;AAKZF,IAAAA,KAAK,EAAG,CAAC,CAAD,EAAG,CAAH,CALI;AAMZ2C,IAAAA,cAAc,EAAG,EANL;AAOZjB,IAAAA,GAAG,EAAED,MAAM,CAACF,GAAD,CAPC;AAQZ9B,IAAAA,MAAM,EAAEmC,SAAS,CAACL,GAAD,CARL;AASZa,IAAAA,MAAM,EAAGF,SAAS,CAACV,QAAD;AATN,GAAd,EADG,KAaHc,GAAG,CAACM,QAAJ,CAAa;AACXH,IAAAA,GAAG,EAAG,KADK;AAEXC,IAAAA,KAAK,EAAE,IAFI;AAGXxC,IAAAA,aAAa,EAAG,CAHL;AAIXF,IAAAA,KAAK,EAAG,CAAC,CAAD,EAAG,CAAH,CAJG;AAKX2C,IAAAA,cAAc,EAAG,EALN;AAMXjB,IAAAA,GAAG,EAAED,MAAM,CAACF,GAAD,CANA;AAOX9B,IAAAA,MAAM,EAAEmC,SAAS,CAACL,GAAD,CAPN;AAQXa,IAAAA,MAAM,EAAGF,SAAS,CAACV,QAAD;AARP,GAAb;AAWH,CAvCD;;AAwCA,MAAMqB,GAAN,SAAkBvD,SAAlB,CAA4B;AAC1BwD,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,YALmB,GAKHC,QAAD,IAAc;AAE3BZ,MAAAA,cAAc,CAAC,IAAD,EAAO,QAAP,CAAd;AACD,KARkB;;AAAA,SASnBa,YATmB,GASJ,MAAM;AACnB,UAAIC,SAAS,GAAG/B,MAAhB;;AACA,SACA;AACEA,QAAAA,MAAM,GAAGC,QAAQ,CAACH,GAAG,GAAGI,IAAI,CAACF,MAAL,MAAiBD,GAAG,GAAGD,GAAvB,CAAP,EAAoC,EAApC,CAAjB;AACD,OAHD,QAGOiC,SAAS,KAAK/B,MAHrB;;AAIAG,MAAAA,GAAG,GAAGN,SAAS,CAACG,MAAD,CAAf;AACAiB,MAAAA,cAAc,CAAC,IAAD,EAAO,UAAP,CAAd;AACD,KAjBkB;;AAAA,SAmBnBe,aAnBmB,GAmBFtD,KAAD,IAAW;AAErB,UAAG,CAAC,KAAK0C,KAAL,CAAWC,GAAZ,IAAmB3C,KAAK,CAACuD,OAAN,GAAgB,EAAnC,IAAyCvD,KAAK,CAACuD,OAAN,GAAgB,EAA5D,EACA;AACE,YAAIC,YAAY,GAAG,KAAKd,KAAL,CAAWJ,MAAX,CAAkBtC,KAAK,CAACuD,OAAN,GAAc,EAAhC,EAAoCpB,IAAvD;AACA,aAAKsB,WAAL,CAAiBD,YAAjB;AACD;AAEN,KA3BkB;;AAAA,SA4BnBE,YA5BmB,GA4BH1D,KAAD,IAAW;AAExBA,MAAAA,KAAK,CAAC2D,cAAN;AACA,UAAIf,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAvB;AACA,UAAI9C,SAAS,GAAG,CAAC,GAAG,KAAK4C,KAAL,CAAW5C,SAAf,CAAhB;AACAA,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeqD,QAAQ,CAACS,cAAT,CAAwB,SAAxB,EAAmC5B,KAAlD;AACAlC,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeqD,QAAQ,CAACS,cAAT,CAAwB,SAAxB,EAAmC5B,KAAlD;AACAY,MAAAA,KAAK,GAAG,IAAR;AACA,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACA,WAAKE,QAAL,CAAc;AAAEhD,QAAAA;AAAF,OAAd;AAEAqD,MAAAA,QAAQ,CAACU,gBAAT,CAA0B,SAA1B,EAAqC,KAAKP,aAA1C;AACD,KAxCkB;;AAAA,SA8CnBG,WA9CmB,GA8CJK,YAAD,IAAkB;AAC9B,UAAIxB,MAAM,GAAG,CAAE,GAAG,KAAKI,KAAL,CAAWJ,MAAhB,CAAb;AACA,UAAIlC,aAAa,GAAG,KAAKsC,KAAL,CAAWtC,aAA/B;AACA,UAAIF,KAAK,GAAG,KAAKwC,KAAL,CAAWxC,KAAvB;AACA,UAAIJ,SAAS,GAAG,KAAK4C,KAAL,CAAW5C,SAA3B;AACA,UAAIiE,QAAQ,GAAG,CAAf;AACAzB,MAAAA,MAAM,CAACP,GAAP,CAAW,UAASE,KAAT,EAAgB;AACzB,YAAGA,KAAK,CAACE,IAAN,KAAgB2B,YAAnB,EAAgC;AAC9BxB,UAAAA,MAAM,CAACyB,QAAD,CAAN,GAAmB,EAAC,GAAGzB,MAAM,CAACyB,QAAD,CAAV;AAAsBnE,YAAAA,QAAQ,EAAE;AAAhC,WAAnB;AACD;;AACDmE,QAAAA,QAAQ;AACR,eAAO,CAAP;AACD,OAND;AAOA,WAAKjB,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;;AACA,UAAG,KAAKI,KAAL,CAAWd,GAAX,CAAeoC,OAAf,CAAuBF,YAAvB,MAAyC,CAAC,CAA1C,IAA+C,KAAKpB,KAAL,CAAWC,GAAX,KAAmB,KAArE,EAA2E;AAGzE,YAAI9B,OAAO,GAAGH,aAAa,CAAC,KAAKgC,KAAL,CAAWd,GAAZ,EAAiBkC,YAAjB,CAA3B;AACA,YAAInE,MAAM,GAAG,CAAE,GAAG,KAAK+C,KAAL,CAAW/C,MAAhB,CAAb;AACA,YAAIkD,cAAc,GAAG,CAAE,GAAG,KAAKH,KAAL,CAAWG,cAAhB,CAArB;AACA,YAAIoB,UAAU,GAAG,KAAjB;AACApD,QAAAA,OAAO,CAACkB,GAAR,CAAY,UAASE,KAAT,EAAgB;AAC1B,cAAGY,cAAc,CAACZ,KAAD,CAAd,IAAyBY,cAAc,CAACZ,KAAD,CAAd,CAAsB,CAAtB,MAA6B6B,YAAzD,EACEG,UAAU,GAAG,IAAb;AACFpB,UAAAA,cAAc,CAACZ,KAAD,CAAd,GAAwB,EAAC,GAAGY,cAAc,CAACZ,KAAD,CAAlB;AAA2B,eAAGtC,MAAM,CAACsC,KAAD,CAAN,CAAcE;AAA5C,WAAxB;AACAxC,UAAAA,MAAM,CAACsC,KAAD,CAAN,GAAgB,EAAC,GAAGtC,MAAM,CAACsC,KAAD,CAAV;AAAmBrC,YAAAA,QAAQ,EAAE;AAA7B,WAAhB;AAEA,iBAAO,CAAP;AACD,SAPD;;AAQA,YAAGqE,UAAH,EAAc;AACZ/D,UAAAA,KAAK,CAACE,aAAD,CAAL,GAAuBF,KAAK,CAACE,aAAD,CAAL,GAAuB,CAA9C;AACA,cAAGA,aAAa,KAAK,CAArB,EACEA,aAAa,GAAG,CAAhB,CADF,KAGEA,aAAa,GAAG,CAAhB;AAEH,SAPD,MASEF,KAAK,CAACE,aAAD,CAAL,GAAuBF,KAAK,CAACE,aAAD,CAAL,GAAuB,CAA9C;;AACF,aAAK0C,QAAL,CAAc;AAAE5C,UAAAA;AAAF,SAAd;AAEA,aAAK4C,QAAL,CAAc;AAAEnD,UAAAA;AAAF,SAAd;AACA,aAAKmD,QAAL,CAAc;AAAED,UAAAA;AAAF,SAAd;AAEA3B,QAAAA,IAAI,GAAG,KAAKwB,KAAL,CAAWd,GAAlB;AACAX,QAAAA,KAAK,GAAG,CAAR;AACA4B,QAAAA,cAAc,CAACd,GAAf,CAAmB,UAASC,KAAT,EAAgBkC,GAAhB,EAAoB;AACrC,cAAGlC,KAAK,KAAKmC,SAAV,IAAuBjD,IAAI,CAACgD,GAAD,CAAJ,KAAclC,KAAK,CAAC,CAAD,CAA7C,EACA;AACEf,YAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACD;;AACD,iBAAO,CAAP;AACD,SAND;;AAOA,YAAGA,KAAK,KAAK,KAAKyB,KAAL,CAAWd,GAAX,CAAeb,MAA5B,EAAmC;AAEjC,cAAIqD,aAAa,GAAGhE,aAAa,KAAK,CAAlB,GAAsB,CAAtB,GAA0B,CAA9C;AACAiE,UAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYlE,aAAZ;AACA,cAAGF,KAAK,CAACE,aAAD,CAAL,GAAuBF,KAAK,CAACkE,aAAD,CAA/B,EACE,KAAKtB,QAAL,CAAc;AAAEvC,YAAAA,YAAY,EAAET,SAAS,CAACM,aAAD;AAAzB,WAAd,EADF,KAGE,KAAK0C,QAAL,CAAc;AAAEvC,YAAAA,YAAY,EAAET,SAAS,CAACsE,aAAD;AAAzB,WAAd;AACF,eAAKtB,QAAL,CAAc;AAAEH,YAAAA,GAAG,EAAE;AAAP,WAAd;AACD;AACF,OAlDD,MAmDI;AACFzC,QAAAA,KAAK,CAACE,aAAD,CAAL,GAAuBF,KAAK,CAACE,aAAD,CAAL,GAAuB,CAA9C;AACA,YAAGA,aAAa,KAAK,CAArB,EACIA,aAAa,GAAG,CAAhB,CADJ,KAGIA,aAAa,GAAG,CAAhB;AAEJ,aAAK0C,QAAL,CAAc;AAAE5C,UAAAA;AAAF,SAAd;AACD;;AACD,WAAK4C,QAAL,CAAc;AAAE1C,QAAAA;AAAF,OAAd;AAED,KA1HkB;;AAEjBmC,IAAAA,cAAc,CAAC,IAAD,EAAO,aAAP,CAAd;AAED;;AAsCDgC,EAAAA,oBAAoB,GAAG;AACrBpB,IAAAA,QAAQ,CAACqB,mBAAT,CAA6B,SAA7B,EAAwC,KAAKlB,aAA7C;AACD;;AAgFFmB,EAAAA,MAAM,GAAI;AACP,UAAM;AAAE9E,MAAAA,MAAF;AAAU2C,MAAAA,MAAV;AAAkBK,MAAAA,GAAlB;AAAuBzC,MAAAA,KAAvB;AAA8B0C,MAAAA,KAA9B;AAAqC9C,MAAAA,SAArC;AAAgDM,MAAAA,aAAhD;AAA+DG,MAAAA;AAA/D,QAA+E,KAAKmC,KAA1F;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAACE,KAAD,iBAAU,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAE9C,SAAvB;AAAkC,MAAA,QAAQ,EAAE,KAAK4D,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADX,EAGCd,KAAK,IAAIjD,MAAM,CAACoC,GAAP,CAAW,CAACpC,MAAD,EAASsC,KAAT,kBACf,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAEtC,MAAM,CAACwC,IAAvB;AAA6B,MAAA,QAAQ,EAAExC,MAAM,CAACC,QAA9C;AAAwD,MAAA,GAAG,EAAEqC,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,CAHV,EAMCW,KAAK,IAAI,CAACD,GAAV,IAAiBL,MAAM,CAACP,GAAP,CAAW,CAACO,MAAD,EAASL,KAAT,kBAEvB,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAEK,MAAM,CAACH,IAAvB;AAA6B,MAAA,QAAQ,EAAEG,MAAM,CAAC1C,QAA9C;AAAwD,MAAA,KAAK,EAAEqC,KAAK,GAAG,EAAR,GAAa,YAAb,GAA4B,aAA3F;AAA0G,MAAA,OAAO,EAAE,KAAKwB,WAAxH;AAAqI,MAAA,GAAG,EAAExB,KAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFY,CANlB,EAWCW,KAAK,iBAAI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE9C,SAAlB;AAA6B,MAAA,KAAK,EAAEI,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXV,EAYC0C,KAAK,IAAID,GAAT,iBAAgB,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE7C,SAAnB;AAA8B,MAAA,aAAa,EAAEM,aAA7C;AAA4D,MAAA,YAAY,EAAEG,YAA1E;AAAwF,MAAA,OAAO,EAAE,KAAK6C,YAAtG;AAAoH,MAAA,aAAa,EAAE,KAAKF,YAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZjB,CADF;AAiBD;;AAhJyB;;AAqJ5B,eAAeH,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nconst HIDDEN_SYMBOL = \"_\";\nconst Lettre = ({ lettre, feedback }) => (\n  <div className={`lettre ${feedback}`}>\n    <span className=\"lettre\">\n      {feedback === 'hidden' ? HIDDEN_SYMBOL : lettre}\n    </span>\n  </div>\n)\nconst FormJoueur= ({  nomJoueur, onSubmit}) => (\n  <div id=\"divForm\">\n    <form id=\"form\"  onSubmit={(event) => onSubmit(event)}>\n      <label>\n        Joueur 1 :\n        <input type=\"text\" id=\"joueur1\" />\n      </label>\n      <label>\n        Joueur 2 :\n        <input type=\"text\" id=\"joueur2\" />\n      </label>\n      <br/>\n      <br/>\n      <input type=\"submit\" value=\"Commencer\" />\n    </form>\n  </div>\n)\nconst Score = ({ score, nomJoueur }) => (\n  <div>\n    <span className={`score`}>\n      Score de {nomJoueur[0]} : {score[0]}\n      <br/>\n      Score de {nomJoueur[1]} : {score[1]}\n      <br/>\n    </span>\n  </div>\n)\nconst Reinit = ({ nomJoueur, joueurCourant, onClick, onClickReboot, nomVainqueur }) => (\n  <div className=\"reinitParent\">\n    <br/>\n    <br/>\n    <div className={`win`}>{nomVainqueur} a gagné!</div>\n    <br/>\n    <br/>\n    <button className={`reinit`} onClick={() => onClick()}>\n      Recommencer\n    </button>\n    <button className={`reboot`} onClick={() => onClickReboot()}>\n      Changer de joueur\n    </button>\n  </div>\n)\nconst Entree = ({ lettre, feedback, range, onClick }) => (\n  <div className={`entree ${feedback} ${range}`} onClick={() => onClick(lettre)}>\n    <span className=\"symbol\">\n      {lettre}\n    </span>\n  </div>\n)\nfunction getAllIndexes (arr, val){\n    let indexes = [], i;\n    for(i = 0; i < arr.length; i++)\n        if (arr[i] === val)\n            indexes.push(i);\n    return indexes;\n}\nlet count = 0 \nlet copy = []\nconst LISTE_MOT = [\"SERPENT\", \"TORTUE\", \"CHEVAL\", \"CROCODILE\", \"LION\", \"ELEPHANT\", \"CHEVRE\", \"MOUTON\", \"CRAPAUD\"]\nlet min = 0\nlet max = LISTE_MOT.length\nlet random = parseInt(min + Math.random() * (max - min), 10)\nlet MOT = LISTE_MOT[random]\nconst ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n//On transforme le string mot en array\nconst getMot = (mot) =>{\n  return mot.split('')\n}\n//On transforme le string mot en lettre ({id:..., name:..., feedback:...})\nconst getLettre = (mot) =>{\n  let lettre = getMot(mot)\n  lettre = lettre.map(function(value, index){\n    value = {id: index+1, name: value, feedback: \"hidden\"}\n    return value\n  })\n  return lettre\n}\n//On transforme le string mot en entree ({id:..., name:..., feedback:...})\nconst getEntree = (alphabet) =>{\n  let entree = getMot(alphabet)\n  entree = entree.map(function(value, index){\n    value = {id: index+1, name: value, feedback: \"clickable\"}\n    return value\n  })\n  return entree\n}\n//fonction qui permet d'initialiser le state\nconst getInitialiser  = (obj, detail) =>  {\n  \n  if(detail ===  \"constructor\")\n    obj.state = {\n      won : false,\n      start : false,\n      nomJoueur: [],\n      joueurCourant : 0,\n      nomVainqueur: \"\",\n      score : [0,0],\n      matchedIndices : [],\n      mot :getMot(MOT),\n      lettre :getLettre(MOT),\n      entree : getEntree(ALPHABET)\n      }\n  else if(detail ===  \"reboot\")\n    obj.setState( {\n      won : false,\n      start : false,\n      nomJoueur: [],\n      joueurCourant : 0,\n      score : [0,0],\n      matchedIndices : [],\n      mot :getMot(MOT),\n      lettre :getLettre(MOT),\n      entree : getEntree(ALPHABET)\n      })\n  else\n    obj.setState({\n      won : false,\n      start: true,\n      joueurCourant : 0,\n      score : [0,0],\n      matchedIndices : [],\n      mot :getMot(MOT),\n      lettre :getLettre(MOT),\n      entree : getEntree(ALPHABET)\n      })\n\n} \nclass App extends Component {\n  constructor(props) {\n    super(props);\n    getInitialiser(this, \"constructor\")\n    \n  }\n  handleReboot = (document) => {\n    \n    getInitialiser(this, \"reboot\")\n  }\n  handleReinit = () => {\n    let oldRandom = random\n    do\n    {\n      random = parseInt(min + Math.random() * (max - min), 10)\n    }while(oldRandom === random)\n    MOT = LISTE_MOT[random]\n    getInitialiser(this, \"function\")\n  }\n\n  handleKeyDown = (event) => {\n\n        if(!this.state.won && event.keyCode > 64 && event.keyCode < 91)\n        { \n          let valeurLettre = this.state.entree[event.keyCode-65].name\n          this.handleClick(valeurLettre)\n        }\n      \n  }\n  handleSubmit = (event) => {\n\n    event.preventDefault()\n    let start = this.state.start\n    let nomJoueur = [...this.state.nomJoueur]\n    nomJoueur[0] = document.getElementById(\"joueur1\").value\n    nomJoueur[1] = document.getElementById(\"joueur2\").value\n    start = true\n    this.setState({ start })\n    this.setState({ nomJoueur })\n    \n    document.addEventListener(\"keydown\", this.handleKeyDown)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown)\n  }\n  \n  handleClick = (boutonClique) => {\n    let entree = [ ...this.state.entree ]\n    let joueurCourant = this.state.joueurCourant\n    let score = this.state.score\n    let nomJoueur = this.state.nomJoueur\n    let compteur = 0\n    entree.map(function(index) {\n      if(index.name ===  boutonClique){\n        entree[compteur] = {...entree[compteur], feedback: \"alreadyClicked\"}\n      }\n      compteur++\n      return 1\n    })\n    this.setState({ entree })\n    if(this.state.mot.indexOf(boutonClique) !== -1 && this.state.won === false){\n      \n      \n      let indexes = getAllIndexes(this.state.mot, boutonClique);\n      let lettre = [ ...this.state.lettre ]\n      let matchedIndices = [ ...this.state.matchedIndices ]\n      let dejaClique = false\n      indexes.map(function(index) {\n        if(matchedIndices[index] && matchedIndices[index][0] === boutonClique)\n          dejaClique = true\n        matchedIndices[index] = {...matchedIndices[index], ...lettre[index].name}\n        lettre[index] = {...lettre[index], feedback: \"visible\"}\n        \n        return 1\n      })\n      if(dejaClique){\n        score[joueurCourant] = score[joueurCourant] - 2;\n        if(joueurCourant === 0)\n          joueurCourant = 1\n        else\n          joueurCourant = 0\n        \n      } \n      else\n        score[joueurCourant] = score[joueurCourant] + 2;\n      this.setState({ score })\n      \n      this.setState({ lettre })\n      this.setState({ matchedIndices })\n      \n      copy = this.state.mot\n      count = 0\n      matchedIndices.map(function(value, key){\n        if(value !== undefined && copy[key] === value[0])\n        {\n          count = count + 1\n        }\n        return 1\n      })\n      if(count === this.state.mot.length){\n        \n        let joueurAdverse = joueurCourant === 1 ? 0 : 1;\n        console.log(joueurAdverse)\n        console.log(joueurCourant)\n        if(score[joueurCourant] > score[joueurAdverse])\n          this.setState({ nomVainqueur: nomJoueur[joueurCourant]})\n        else\n          this.setState({ nomVainqueur: nomJoueur[joueurAdverse]})\n        this.setState({ won: true })\n      }\n    }\n    else{\n      score[joueurCourant] = score[joueurCourant] - 1;\n      if(joueurCourant === 0)\n          joueurCourant = 1\n      else\n          joueurCourant = 0\n      \n      this.setState({ score })\n    }\n    this.setState({ joueurCourant })\n    \n  }\n\n render () {\n    const { lettre, entree, won, score, start, nomJoueur, joueurCourant, nomVainqueur} = this.state\n    return (\n      <div className=\"App\">\n      {!start && <FormJoueur nomJoueur={nomJoueur} onSubmit={this.handleSubmit} />}\n\n      {start && lettre.map((lettre, index) => (\n            <Lettre lettre={lettre.name} feedback={lettre.feedback} key={index} />\n       ))}\n      {start && !won && entree.map((entree, index) => (\n           \n            <Entree lettre={entree.name} feedback={entree.feedback} range={index < 13 ? 'firstRange' : 'secondRange'} onClick={this.handleClick} key={index}   />\n\n      ))}\n      {start && <Score nomJoueur={nomJoueur} score={score}/>}\n      {start && won && <Reinit nomJoueur={nomJoueur} joueurCourant={joueurCourant} nomVainqueur={nomVainqueur} onClick={this.handleReinit} onClickReboot={this.handleReboot}/>}\n       \n      </div>\n    )\n  }\n\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}