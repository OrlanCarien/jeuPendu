{"ast":null,"code":"var _jsxFileName = \"/mnt/c/xampp2/htdocs/memory/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst HIDDEN_SYMBOL = \"_\";\n\nconst Lettre = ({\n  lettre,\n  feedback\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: `lettre ${feedback}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"lettre\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, feedback === 'hidden' ? HIDDEN_SYMBOL : lettre));\n\nconst Entree = ({\n  lettre,\n  feedback,\n  range,\n  onClick\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: `entree ${feedback} ${range}`,\n  onClick: () => onClick(lettre),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"symbol\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, lettre));\n\nfunction getAllIndexes(arr, val) {\n  let indexes = [],\n      i;\n\n  for (i = 0; i < arr.length; i++) if (arr[i] === val) indexes.push(i);\n\n  return indexes;\n}\n\nlet count = 0;\nlet copy = [];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = entree => {\n      if (this.state.mot.indexOf(entree) !== -1 && this.state.won === false) {\n        let indexes = getAllIndexes(this.state.mot, entree);\n        let lettre = [...this.state.lettre];\n        let matchedIndices = [...this.state.matchedIndices];\n        let entreeState = [...this.state.entree];\n        entree.map(function (index) {\n          if (index === entreeState) {\n            entreeState[index] = { ...entreeState[index],\n              feedback: \"unclickable\"\n            };\n          }\n\n          return 1;\n        });\n        indexes.map(function (index) {\n          matchedIndices[index] = { ...matchedIndices[index],\n            ...lettre[index].name\n          };\n          lettre[index] = { ...lettre[index],\n            feedback: \"visible\"\n          };\n          return 1;\n        });\n        this.setState({\n          lettre\n        });\n        this.setState({\n          matchedIndices\n        });\n        this.setState({\n          entreeState\n        });\n        copy = this.state.mot;\n        count = 0;\n        matchedIndices.map(function (value, key) {\n          if (value !== undefined && copy[key] === value[0]) {\n            count = count + 1;\n          }\n\n          return 1;\n        });\n\n        if (count === this.state.mot.length) {\n          this.setState({\n            won: true\n          });\n          alert(\"Vous avez gagnÃ©\");\n        }\n      }\n    };\n\n    this.state = {\n      won: false,\n      matchedIndices: [],\n      mot: [\"S\", \"E\", \"R\", \"P\", \"E\", \"N\", \"T\"],\n      lettre: [{\n        id: 1,\n        name: \"S\",\n        feedback: \"hidden\"\n      }, {\n        id: 2,\n        name: \"E\",\n        feedback: \"hidden\"\n      }, {\n        id: 3,\n        name: \"R\",\n        feedback: \"hidden\"\n      }, {\n        id: 4,\n        name: \"P\",\n        feedback: \"hidden\"\n      }, {\n        id: 5,\n        name: \"E\",\n        feedback: \"hidden\"\n      }, {\n        id: 6,\n        name: \"N\",\n        feedback: \"hidden\"\n      }, {\n        id: 7,\n        name: \"T\",\n        feedback: \"hidden\"\n      }],\n      entree: [{\n        id: 1,\n        name: \"A\",\n        feedback: \"clickable\"\n      }, {\n        id: 2,\n        name: \"B\",\n        feedback: \"clickable\"\n      }, {\n        id: 3,\n        name: \"C\",\n        feedback: \"clickable\"\n      }, {\n        id: 4,\n        name: \"D\",\n        feedback: \"clickable\"\n      }, {\n        id: 5,\n        name: \"E\",\n        feedback: \"clickable\"\n      }, {\n        id: 6,\n        name: \"F\",\n        feedback: \"clickable\"\n      }, {\n        id: 7,\n        name: \"G\",\n        feedback: \"clickable\"\n      }, {\n        id: 8,\n        name: \"H\",\n        feedback: \"clickable\"\n      }, {\n        id: 9,\n        name: \"I\",\n        feedback: \"clickable\"\n      }, {\n        id: 10,\n        name: \"J\",\n        feedback: \"clickable\"\n      }, {\n        id: 11,\n        name: \"K\",\n        feedback: \"clickable\"\n      }, {\n        id: 12,\n        name: \"L\",\n        feedback: \"clickable\"\n      }, {\n        id: 13,\n        name: \"M\",\n        feedback: \"clickable\"\n      }, {\n        id: 14,\n        name: \"N\",\n        feedback: \"clickable\"\n      }, {\n        id: 15,\n        name: \"O\",\n        feedback: \"clickable\"\n      }, {\n        id: 16,\n        name: \"P\",\n        feedback: \"clickable\"\n      }, {\n        id: 17,\n        name: \"Q\",\n        feedback: \"clickable\"\n      }, {\n        id: 18,\n        name: \"R\",\n        feedback: \"clickable\"\n      }, {\n        id: 19,\n        name: \"S\",\n        feedback: \"clickable\"\n      }, {\n        id: 20,\n        name: \"T\",\n        feedback: \"clickable\"\n      }, {\n        id: 21,\n        name: \"U\",\n        feedback: \"clickable\"\n      }, {\n        id: 22,\n        name: \"V\",\n        feedback: \"clickable\"\n      }, {\n        id: 23,\n        name: \"W\",\n        feedback: \"clickable\"\n      }, {\n        id: 24,\n        name: \"X\",\n        feedback: \"clickable\"\n      }, {\n        id: 25,\n        name: \"Y\",\n        feedback: \"clickable\"\n      }, {\n        id: 26,\n        name: \"Z\",\n        feedback: \"clickable\"\n      }]\n    };\n  }\n\n  render() {\n    const {\n      lettre,\n      entree\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, lettre.map((lettre, index) => /*#__PURE__*/React.createElement(Lettre, {\n      lettre: lettre.name,\n      feedback: lettre.feedback,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    })), entree.map((entree, index) => /*#__PURE__*/React.createElement(Entree, {\n      lettre: entree.name,\n      feedback: entree.feedback,\n      range: index < 13 ? 'firstRange' : 'secondRange',\n      onClick: this.handleClick,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n    {this.lettre.map((lettre, index) => (\n      <Lettre lettre={lettre.name} feedback=\"hidden\" index={index} />\n    \n    ))}\n    </div>\n  );\n}\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/xampp2/htdocs/memory/src/App.js"],"names":["React","Component","HIDDEN_SYMBOL","Lettre","lettre","feedback","Entree","range","onClick","getAllIndexes","arr","val","indexes","i","length","push","count","copy","App","handleClick","entree","state","mot","indexOf","won","matchedIndices","entreeState","map","index","name","setState","value","key","undefined","alert","id","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nconst HIDDEN_SYMBOL = \"_\";\nconst Lettre = ({ lettre, feedback }) => (\n  <div className={`lettre ${feedback}`}>\n    <span className=\"lettre\">\n      {feedback === 'hidden' ? HIDDEN_SYMBOL : lettre}\n    </span>\n  </div>\n)\nconst Entree = ({ lettre, feedback, range, onClick }) => (\n  <div className={`entree ${feedback} ${range}`} onClick={() => onClick(lettre)}>\n    <span className=\"symbol\">\n      {lettre}\n    </span>\n  </div>\n)\nfunction getAllIndexes (arr, val){\n      let indexes = [], i;\n      for(i = 0; i < arr.length; i++)\n          if (arr[i] === val)\n              indexes.push(i);\n      return indexes;\n  }\nlet count = 0 \nlet copy = [] \nclass App extends Component {\n  \n  handleClick = (entree) => {\n    \n    if(this.state.mot.indexOf(entree) !== -1 && this.state.won === false){\n      let indexes = getAllIndexes(this.state.mot, entree);\n      let lettre = [ ...this.state.lettre ]\n      let matchedIndices = [ ...this.state.matchedIndices ]\n      let entreeState = [ ...this.state.entree ]\n      entree.map(function(index) {\n        if(index ===  entreeState){\n          entreeState[index] = {...entreeState[index], feedback: \"unclickable\"}\n        }\n          return 1\n      })\n      indexes.map(function(index) {\n        matchedIndices[index] = {...matchedIndices[index], ...lettre[index].name}\n        lettre[index] = {...lettre[index], feedback: \"visible\"}\n        \n        return 1\n      })\n      \n      \n      this.setState({ lettre })\n      this.setState({ matchedIndices })\n      this.setState({ entreeState})\n      copy = this.state.mot\n      count = 0\n      matchedIndices.map(function(value, key){\n        if(value !== undefined && copy[key] === value[0])\n        {\n          count = count + 1\n        }\n        return 1\n      })\n      if(count === this.state.mot.length){\n        this.setState({ won: true })\n        alert(\"Vous avez gagnÃ©\")\n      }\n      \n      \n    }\n    \n  }\n  state = {\n    won : false,\n    matchedIndices : [],\n    mot :[\"S\", \"E\", \"R\", \"P\", \"E\", \"N\", \"T\"],\n    \n   lettre :[\n    {id:1, name:\"S\", feedback: \"hidden\"},\n    {id:2, name:\"E\", feedback: \"hidden\"},\n    {id:3, name:\"R\", feedback: \"hidden\"},\n    {id:4, name:\"P\", feedback: \"hidden\"},\n    {id:5, name:\"E\", feedback: \"hidden\"},\n    {id:6, name:\"N\", feedback: \"hidden\"},\n    {id:7, name:\"T\", feedback: \"hidden\"}\n  ],\n   entree : [\n    {id:1, name:\"A\" , feedback: \"clickable\"},\n    {id:2, name:\"B\", feedback: \"clickable\"},\n    {id:3, name:\"C\", feedback: \"clickable\"},\n    {id:4, name:\"D\", feedback: \"clickable\"},\n    {id:5, name:\"E\", feedback: \"clickable\"},\n    {id:6, name:\"F\", feedback: \"clickable\"},\n    {id:7, name:\"G\", feedback: \"clickable\"},\n    {id:8, name:\"H\", feedback: \"clickable\"},\n    {id:9, name:\"I\", feedback: \"clickable\"},\n    {id:10, name:\"J\", feedback: \"clickable\"},\n    {id:11, name:\"K\", feedback: \"clickable\"},\n    {id:12, name:\"L\", feedback: \"clickable\"},\n    {id:13, name:\"M\", feedback: \"clickable\"},\n    {id:14, name:\"N\", feedback: \"clickable\"},\n    {id:15, name:\"O\", feedback: \"clickable\"},\n    {id:16, name:\"P\", feedback: \"clickable\"},\n    {id:17, name:\"Q\", feedback: \"clickable\"},\n    {id:18, name:\"R\", feedback: \"clickable\"},\n    {id:19, name:\"S\", feedback: \"clickable\"},\n    {id:20, name:\"T\", feedback: \"clickable\"},\n    {id:21, name:\"U\", feedback: \"clickable\"},\n    {id:22, name:\"V\", feedback: \"clickable\"},\n    {id:23, name:\"W\", feedback: \"clickable\"},\n    {id:24, name:\"X\", feedback: \"clickable\"},\n    {id:25, name:\"Y\", feedback: \"clickable\"},\n    {id:26, name:\"Z\", feedback: \"clickable\"},\n   ]\n   }\n render () {\n\n   const { lettre, entree} = this.state\n   \n    return (\n      <div className=\"App\">\n      {lettre.map((lettre, index) => (\n            <Lettre lettre={lettre.name} feedback={lettre.feedback} key={index} />\n       ))}\n      {entree.map((entree, index) => (\n           \n            <Entree lettre={entree.name} feedback={entree.feedback} range={index < 13 ? 'firstRange' : 'secondRange'} onClick={this.handleClick} key={index}   />\n\n      ))}\n       \n      </div>\n    )\n  }\n\n}\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n    {this.lettre.map((lettre, index) => (\n      <Lettre lettre={lettre.name} feedback=\"hidden\" index={index} />\n    \n    ))}\n    </div>\n  );\n}\n*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}