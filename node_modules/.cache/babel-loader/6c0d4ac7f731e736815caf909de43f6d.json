{"ast":null,"code":"var _jsxFileName = \"/mnt/c/xampp2/htdocs/memory/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst HIDDEN_SYMBOL = \"_\";\n\nconst Lettre = ({\n  lettre,\n  feedback\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: `lettre ${feedback}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"lettre\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, feedback === 'hidden' ? HIDDEN_SYMBOL : lettre));\n\nconst Entree = ({\n  lettre,\n  feedback\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: `entree ${feedback}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"entree\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}));\n\nclass App extends Component {\n  render() {\n    const lettre = [{\n      id: 1,\n      name: \"S\"\n    }, {\n      id: 2,\n      name: \"E\"\n    }, {\n      id: 3,\n      name: \"R\"\n    }, {\n      id: 4,\n      name: \"P\"\n    }, {\n      id: 5,\n      name: \"E\"\n    }, {\n      id: 6,\n      name: \"N\"\n    }, {\n      id: 7,\n      name: \"T\"\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, lettre.map((lettre, index) => /*#__PURE__*/React.createElement(Lettre, {\n      lettre: lettre.name,\n      feedback: \"hidden\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n    {this.lettre.map((lettre, index) => (\n      <Lettre lettre={lettre.name} feedback=\"hidden\" index={index} />\n    \n    ))}\n    </div>\n  );\n}\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/xampp2/htdocs/memory/src/App.js"],"names":["React","Component","HIDDEN_SYMBOL","Lettre","lettre","feedback","Entree","App","render","id","name","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,MAAMC,aAAa,GAAG,GAAtB;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,kBACb;AAAK,EAAA,SAAS,EAAG,UAASA,QAAS,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,QAAQ,KAAK,QAAb,GAAwBH,aAAxB,GAAwCE,MAD3C,CADF,CADF;;AAOA,MAAME,MAAM,GAAG,CAAC;AAAEF,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,kBACb;AAAK,EAAA,SAAS,EAAG,UAASA,QAAS,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;;AAOA,MAAME,GAAN,SAAkBN,SAAlB,CAA4B;AAC3BO,EAAAA,MAAM,GAAI;AACR,UAAMJ,MAAM,GAAG,CACd;AAACK,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,IAAI,EAAC;AAAZ,KADc,EAEd;AAACD,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,IAAI,EAAC;AAAZ,KAFc,EAGd;AAACD,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,IAAI,EAAC;AAAZ,KAHc,EAId;AAACD,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,IAAI,EAAC;AAAZ,KAJc,EAKd;AAACD,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,IAAI,EAAC;AAAZ,KALc,EAMd;AAACD,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,IAAI,EAAC;AAAZ,KANc,EAOd;AAACD,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,IAAI,EAAC;AAAZ,KAPc,CAAf;AASC,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCN,MAAM,CAACO,GAAP,CAAW,CAACP,MAAD,EAASQ,KAAT,kBACN,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAER,MAAM,CAACM,IAAvB;AAA6B,MAAA,QAAQ,EAAC,QAAtC;AAA+C,MAAA,GAAG,EAAEE,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CADD,CADF;AAOD;;AAlByB;AAsB5B;;;;;;;;;;;;;;AAaA,eAAeL,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nconst HIDDEN_SYMBOL = \"_\";\nconst Lettre = ({ lettre, feedback }) => (\n  <div className={`lettre ${feedback}`}>\n    <span className=\"lettre\">\n      {feedback === 'hidden' ? HIDDEN_SYMBOL : lettre}\n    </span>\n  </div>\n)\nconst Entree = ({ lettre, feedback }) => (\n  <div className={`entree ${feedback}`}>\n    <span className=\"entree\">\n      \n    </span>\n  </div>\n)\nclass App extends Component {\n render () {\n   const lettre = [\n    {id:1, name:\"S\"},\n    {id:2, name:\"E\"},\n    {id:3, name:\"R\"},\n    {id:4, name:\"P\"},\n    {id:5, name:\"E\"},\n    {id:6, name:\"N\"},\n    {id:7, name:\"T\"}\n   ]\n    return (\n      <div className=\"App\">\n      {lettre.map((lettre, index) => (\n            <Lettre lettre={lettre.name} feedback=\"hidden\" key={index} />\n            ))}\n      </div>\n    )\n  }\n\n}\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n    {this.lettre.map((lettre, index) => (\n      <Lettre lettre={lettre.name} feedback=\"hidden\" index={index} />\n    \n    ))}\n    </div>\n  );\n}\n*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}